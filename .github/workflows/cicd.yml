# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: teste CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: ls -la

  install:
    name: Installing Packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{runner.os}}-${{hashFiles('**/npm.lock')}}

      - name: Install dependencies
        run: npm install

  unusedexports:
    name: Find unused exports (desd code)
    runs-on: ubuntu-latest
    needs: run-tests # Garante que este job seja executado após o job run-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{runner.os}}-${{hashFiles('**/npm.lock')}}

      - name: Run ts-prune
        run: npx ts-prune --error
        continue-on-error: true  # Continua mesmo que o ts-prune retorne código de saída diferente de zero
  
      - name: Check ts-prune result
        run: echo "::set-output name=prune-result::$(echo $?)"
        id: check-result
  
      - name: Fail if ts-prune found issues
        if: steps.check-result.outputs.prune-result != 0
        run: exit 1  # Força uma falha se ts-prune detectar problemas
